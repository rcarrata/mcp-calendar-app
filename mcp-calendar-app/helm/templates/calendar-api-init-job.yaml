{{- if and .Values.calendarApi.enabled .Values.calendarApi.database.initJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "redwood-calendar.fullname" . }}-api-init
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "redwood-calendar.labels" . | nindent 4 }}
    app.kubernetes.io/component: api-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "redwood-calendar.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api-init
    spec:
      restartPolicy: Never
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
      - name: db-init
        image: "{{ .Values.global.imageRegistry }}{{ .Values.calendarApi.image.repository }}:{{ .Values.calendarApi.image.tag }}"
        imagePullPolicy: {{ .Values.calendarApi.image.pullPolicy }}
        command:
        - python
        - test_data.py
        env:
        - name: DATABASE_PATH
          value: "/app/data/CalendarDB.db"
        - name: UNIVERSITY_NAME
          value: {{ .Values.university.name | quote }}
        volumeMounts:
        - name: calendar-data
          mountPath: /app/data
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: calendar-data
        persistentVolumeClaim:
          claimName: {{ include "redwood-calendar.fullname" . }}-api-pvc
{{- end }}